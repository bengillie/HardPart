"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var router_1 = require("@angular/router");
var timetable_model_1 = require("../model/timetable.model");
var timetable_model_2 = require("~/model/timetable.model");
var appvalues_service_1 = require("~/service/appvalues.service");
var homework_service_1 = require("~/service/homework.service");
var logging_service_1 = require("~/service/logging.service");
var timetable_service_1 = require("../service/timetable.service");
var TimetableComponent = /** @class */ (function () {
    function TimetableComponent(appValuesService, homeworkService, loggingService, router, timetableService) {
        this.appValuesService = appValuesService;
        this.homeworkService = homeworkService;
        this.loggingService = loggingService;
        this.router = router;
        this.timetableService = timetableService;
        this.subscriptions = [];
        this.breakPeriodLabel = "";
        this.homeworkIcon = "";
        this.lessonDate = new Date();
        this.startDate = new Date();
        this.endDate = new Date();
        this.allHomeworks = [];
        this.allDueHomeworks = [];
        this.allLessons = [];
        this.lessonsForDate = [];
        this.allPeriods = [];
        this.periodsForDate = [];
        this.tabDates = [];
        this.current = false;
        this.hasLesson = true;
        this.isDueLesson = false;
        this.isLoading = true;
        this.lastLesson = false;
        this.showDetails = false;
        this.dateRange = [];
    }
    TimetableComponent.prototype.ngOnInit = function () {
        this.loggedInUser = this.appValuesService.getLoggedInUser();
        this.startDate.setDate(this.startDate.getDate() - (this.startDate.getDay() + 7));
        this.endDate.setDate(this.endDate.getDate() - (this.endDate.getDay() - 14));
        this.getAllHomework();
        this.getLessonsDateRange();
        this.getLessons();
        this.getPeriods();
    };
    TimetableComponent.prototype.ngOnDestroy = function () {
        if (this.subscriptions) {
            for (var _i = 0, _a = this.subscriptions; _i < _a.length; _i++) {
                var subscription = _a[_i];
                subscription.unsubscribe();
            }
        }
    };
    TimetableComponent.prototype.getAllHomework = function () {
        var _this = this;
        this.subscriptions.push(this.homeworkService.getStudentHomework(this.loggedInUser.id)
            .subscribe(function (homework) {
            _this.allHomeworks = homework;
        }));
    };
    TimetableComponent.prototype.getBreakPeriod = function (lesson) {
        var breakTimeName = timetable_model_2.Break;
        this.breakPeriodLabel = "";
        var regexp = new RegExp('B');
        var name = this.getPeriodNameForLesson(lesson);
        if ((new Date(lesson.startDate).getHours() < 12) && regexp.test(name)) {
            this.breakPeriodLabel = breakTimeName.amBreak;
            this.showDetails = false;
            return true;
        }
        if ((new Date(lesson.startDate).getHours() >= 12) && regexp.test(name)) {
            this.breakPeriodLabel = breakTimeName.pmBreak;
            this.showDetails = false;
            return true;
        }
        this.showDetails = true;
        return false;
    };
    TimetableComponent.prototype.getCurrentLesson = function (lesson) {
        var today = new Date();
        if ((today >= new Date(lesson.startDate)) && (today <= new Date(lesson.endDate))) {
            this.current = true;
            return true;
        }
        else {
            this.current = false;
            return false;
        }
    };
    TimetableComponent.prototype.getHomeworkDueDate = function (lesson) {
        var dueHomework = this.allHomeworks.find(function (h) {
            return h.subject == lesson.subject;
        });
        if (dueHomework != undefined) {
            this.allDueHomeworks.push(dueHomework);
            var isDue = this.homeworkService.isDue(dueHomework);
            if (isDue === true) {
                this.isDueLesson = true;
                this.homeworkIcon = String.fromCharCode(0xe91f);
                return true;
            }
        }
        return false;
    };
    TimetableComponent.prototype.getLessons = function () {
        var _this = this;
        this.subscriptions.push(this.timetableService.getLessons()
            .subscribe(function (lessons) {
            lessons = lessons.sort(function (obj1, obj2) {
                return new Date(obj1.startDate).getHours() - new Date(obj2.startDate).getHours();
            });
            _this.allLessons = lessons;
            //this.getLessonsForDate(this.lessonDate);
            _this.getTabDateLesson();
            _this.tabSelectedIndex++;
        }));
    };
    TimetableComponent.prototype.getLessonsDateRange = function () {
        // one week previous date
        var minDate = new Date();
        minDate.setDate(minDate.getDate() - (minDate.getDay() + 7));
        // two weeks future date
        var maxDate = new Date();
        maxDate.setDate(maxDate.getDate() - (maxDate.getDay() - 13));
        var tabItemDate = new Date();
        do {
            tabItemDate = new Date(minDate.setDate(minDate.getDate() + 1));
            this.dateRange.push(tabItemDate);
            if (tabItemDate.getDate() === this.lessonDate.getDate()) {
                this.tabSelectedIndex = this.dateRange.findIndex(function (x) { return x == tabItemDate; });
            }
        } while (tabItemDate < maxDate);
    };
    TimetableComponent.prototype.getLessonsForDate = function (date) {
        if (!this.allLessons) {
            this.lessonsForDate = [];
            return;
        }
        this.lessonsForDate = this.allLessons.filter(function (l) { return new Date(l.startDate).toDateString() === date.toDateString(); });
        this.getTotalLesson();
    };
    TimetableComponent.prototype.getPeriods = function () {
        var _this = this;
        this.subscriptions.push(this.timetableService.getPeriods(new Date(this.startDate), new Date(this.endDate))
            .subscribe(function (p) {
            _this.allPeriods = p;
        }));
    };
    TimetableComponent.prototype.getPeriodNameForLesson = function (lesson) {
        var name = "";
        var startLessonDay = new Date(lesson.startDate).getDay();
        var startLessonHour = new Date(lesson.startDate).getHours();
        var startLessonMinute = new Date(lesson.startDate).getMinutes();
        var endLessonDay = new Date(lesson.endDate).getDay();
        var endLessonHour = new Date(lesson.endDate).getHours();
        var endLessonMinute = new Date(lesson.endDate).getMinutes();
        var period = this.allPeriods.find(function (p) {
            return new Date(p.startDate).getDay() == startLessonDay &&
                new Date(p.startDate).getHours() == startLessonHour &&
                new Date(p.startDate).getMinutes() == startLessonMinute &&
                new Date(p.endDate).getDay() == endLessonDay &&
                new Date(p.endDate).getHours() == endLessonHour &&
                new Date(p.endDate).getMinutes() == endLessonMinute;
        });
        if (period) {
            name = period.name;
        }
        return name;
    };
    TimetableComponent.prototype.getSubjectColour = function (lesson) {
        var subject = timetable_model_2.Subject;
        var color = "";
        switch (lesson.subject) {
            case subject.art: {
                color = "#8B0000";
                break;
            }
            case subject.computing: {
                color = "#8B4513";
                break;
            }
            case subject.design: {
                color = "#808000";
                break;
            }
            case subject.english: {
                color = "#2ECCFA";
                break;
            }
            case subject.geography: {
                color = "#FA58F4";
                break;
            }
            case subject.history: {
                color = "#04B404";
                break;
            }
            case subject.languages: {
                color = "#BF00FF";
                break;
            }
            case subject.math: {
                color = "#FF8000";
                break;
            }
            case subject.music: {
                color = "#642EFE";
                break;
            }
            case subject.pe: {
                color = "#FFFF00";
                break;
            }
            case subject.reg: {
                color = "#086A87";
                break;
            }
            case subject.science: {
                color = "#FF0000";
                break;
            }
        }
        return color;
    };
    TimetableComponent.prototype.getTabDateLesson = function () {
        for (var _i = 0, _a = this.dateRange; _i < _a.length; _i++) {
            var tabDate = _a[_i];
            this.getLessonsForDate(tabDate);
            var timetableTab = new timetable_model_1.TimetableTab;
            timetableTab.date = tabDate;
            timetableTab.lessons = this.lessonsForDate;
            this.tabDates.push(timetableTab);
            console.log(this.tabDates);
        }
        this.isLoading = false;
    };
    TimetableComponent.prototype.printTabDates = function () {
        var ctr = 0;
        for (var _i = 0, _a = this.tabDates; _i < _a.length; _i++) {
            var tab = _a[_i];
            console.log('Class: ' + tab.lessons[ctr].class + '  Teacher: ' + tab.lessons[ctr].teacher);
            ctr++;
        }
    };
    TimetableComponent.prototype.getTotalLesson = function () {
        if (this.lessonsForDate.length === 0) {
            this.hasLesson = false;
        }
        else {
            this.hasLesson = true;
        }
    };
    TimetableComponent.prototype.onTabSwipe = function (args) {
        if (args.oldIndex !== -1) {
            //this.getLessonsForDate(this.tabDate[args.newIndex]);
        }
    };
    TimetableComponent.prototype.onTapHomework = function (lesson) {
        var homework = this.allDueHomeworks.find(function (h) {
            return h.subject == lesson.subject;
        });
        this.router.navigate(["/homeworkdetails/" + homework.id]);
    };
    TimetableComponent = __decorate([
        core_1.Component({
            moduleId: module.id,
            selector: 'ns-timetable',
            templateUrl: './timetable.component.html',
            styleUrls: ['./timetable.component.less']
        }),
        __metadata("design:paramtypes", [appvalues_service_1.AppValuesService,
            homework_service_1.HomeworkService,
            logging_service_1.LoggingService,
            router_1.Router,
            timetable_service_1.TimetableService])
    ], TimetableComponent);
    return TimetableComponent;
}());
exports.TimetableComponent = TimetableComponent;
//# sourceMappingURL=data:application/json;base64,