"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var common_1 = require("@angular/common");
var timetable_model_1 = require("../model/timetable.model");
var login_service_1 = require("../service/login.service");
var timetable_service_1 = require("../service/timetable.service");
var user_model_1 = require("~/model/user.model");
var stack_layout_1 = require("tns-core-modules/ui/layouts/stack-layout/stack-layout");
var TimetableComponent = /** @class */ (function () {
    function TimetableComponent(location, loginService, timetableService) {
        this.location = location;
        this.loginService = loginService;
        this.timetableService = timetableService;
        this.isLoading = true;
        this.lesson = [];
        this.hasLesson = true;
    }
    TimetableComponent.prototype.ngOnInit = function () {
        this.lessonDate = new Date();
        this.period = new timetable_model_1.Periods;
        this.user = this.getLoggedInUser();
        this.getUserType();
        /* this.getParent(); */ // for testing
    };
    TimetableComponent.prototype.ngOnDestroy = function () {
        if (this.subscription != undefined) {
            this.subscription.unsubscribe();
        }
    };
    TimetableComponent.prototype.getChild = function (parent) {
        if (parent.childId.length > 1) {
            for (var i = 0; i < parent.childId.length; i++) {
                console.log("student id: " + parent.childId[i]);
            }
        }
        else {
            this.userId = parent.childId[0];
            this.getLesson(this.userId);
        }
    };
    TimetableComponent.prototype.getLesson = function (userId) {
        var _this = this;
        this.subscription = this.timetableService.getLesson(userId)
            .subscribe(function (lesson) {
            lesson = lesson.filter(function (all) { return new Date(all.startDate).toDateString() === _this.lessonDate.toDateString(); });
            lesson = lesson.sort(function (obj1, obj2) {
                return new Date(obj1.startDate).getHours() - new Date(obj2.startDate).getHours();
            });
            _this.getTotalLesson(lesson);
            /* this.getSubjectColour(lesson); */
            _this.lesson = lesson;
            _this.isLoading = false;
        });
    };
    TimetableComponent.prototype.getLoggedInUser = function () {
        var user = this.loginService.getLoggedInUser();
        return user;
    };
    TimetableComponent.prototype.getParent = function () {
        var _this = this;
        this.subscription = this.timetableService.getParent(3) //this.user.id
            .subscribe(function (parent) {
            _this.parent = parent;
            _this.getChild(parent);
        });
    };
    /* for testing */
    TimetableComponent.prototype.getPeriod = function (startDate, endDate) {
        var _this = this;
        var pName = "";
        this.subscription = this.timetableService.getPeriod(new Date(startDate), new Date(endDate))
            .subscribe(function (period) {
            _this.period = period;
            if (_this.period.name === undefined) {
                pName = _this.period.name;
            }
            else {
                pName = "ERROR";
            }
        });
        return pName;
    };
    TimetableComponent.prototype.getTotalLesson = function (lesson) {
        if (lesson.length === 0) {
            this.hasLesson = false;
        }
        else {
            this.hasLesson = true;
        }
    };
    TimetableComponent.prototype.getUserType = function () {
        if (this.user.usertype === user_model_1.UserType.parent) {
            this.getParent();
        }
        else {
            this.userId = this.user.id;
            this.getLesson(this.userId);
        }
    };
    TimetableComponent.prototype.goBack = function () {
        this.location.back();
    };
    TimetableComponent.prototype.onLeftSwipeClick = function () {
        this.isLoading = true;
        this.lessonDate = new Date(this.lessonDate.setDate(this.lessonDate.getDate() - 1));
        this.getLesson(this.userId);
    };
    TimetableComponent.prototype.onRightSwipeClick = function () {
        this.isLoading = true;
        this.lessonDate = new Date(this.lessonDate.setDate(this.lessonDate.getDate() + 1));
        this.getLesson(this.userId);
    };
    /* for testing */
    TimetableComponent.prototype.getSubjectColour = function (lesson) {
        for (var i = 0; i < lesson.length; i++) {
            switch (lesson[i].subject) {
                case "Science":
                    this.subjectColour.backgroundColor = "green";
                default:
                    this.subjectColour.backgroundColor = "gray";
            }
        }
    };
    __decorate([
        core_1.ViewChild("subjectColour"),
        __metadata("design:type", stack_layout_1.StackLayout)
    ], TimetableComponent.prototype, "subjectColour", void 0);
    TimetableComponent = __decorate([
        core_1.Component({
            moduleId: module.id,
            selector: 'ns-timetable',
            templateUrl: './timetable.component.html',
            styleUrls: ['./timetable.component.less']
        }),
        __metadata("design:paramtypes", [common_1.Location,
            login_service_1.LoginService,
            timetable_service_1.TimetableService])
    ], TimetableComponent);
    return TimetableComponent;
}());
exports.TimetableComponent = TimetableComponent;
//# sourceMappingURL=data:application/json;base64,